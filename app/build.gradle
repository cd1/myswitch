import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    alias libs.plugins.android.application
    alias libs.plugins.kotlin.android
    alias libs.plugins.hilt
    alias libs.plugins.ksp
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'org.jetbrains.kotlin.plugin.serialization' version libs.versions.kotlin
    id 'com.google.protobuf' version '0.9.3'
}

android {
    namespace 'com.gmail.cristiandeives.myswitch'
    compileSdk 34

    defaultConfig {
        applicationId "com.gmail.cristiandeives.myswitch"
        minSdk 21
        targetSdk 34
        versionCode 1
        versionName '0.1'

        testInstrumentationRunner 'com.gmail.cristiandeives.myswitch.HiltTestRunner'
        vectorDrawables {
            useSupportLibrary true
        }

        ksp {
            arg('room.schemaLocation', "$projectDir/schemas".toString())
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        benchmark {
            signingConfig signingConfigs.debug
            matchingFallbacks = ['release']
            debuggable false
        }
    }

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion '1.4.6'
    }

    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    def composeBom = platform(libs.androidx.compose.bom)
    implementation(composeBom)

    implementation libs.accompanist.navigation.animation
    implementation libs.accompanist.systemuicontroller
    implementation libs.androidx.activity.compose
    implementation libs.androidx.appcompat
    implementation libs.androidx.compose.material3
    implementation libs.androidx.compose.ui
    implementation libs.androidx.compose.ui.graphics
    implementation libs.androidx.compose.ui.tooling.preview
    implementation libs.androidx.core.ktx
    implementation libs.androidx.datastore
    implementation libs.androidx.hilt.navigation.compose
    implementation libs.androidx.lifecycle.runtime.compose
    implementation libs.androidx.lifecycle.runtime.ktx
    implementation libs.androidx.navigation.compose
    implementation libs.androidx.profileinstaller
    implementation libs.androidx.room.ktx
    implementation libs.androidx.room.runtime
    implementation libs.arrow.core
    implementation libs.arrow.fx.coroutines
    implementation libs.coil.compose
    implementation libs.kotlinx.serialization.json
    implementation libs.hilt.android
    implementation libs.material
    implementation libs.protobuf.javalite
    implementation libs.retrofit
    implementation libs.retrofit.converter.kotlinx.serialization
    implementation libs.retrofit.converter.scalars

    kapt libs.hilt.compiler
    ksp libs.androidx.room.compiler

    testImplementation libs.androidx.lifecycle.runtime.testing
    testImplementation libs.junit
    testImplementation libs.kotlinx.coroutines.test
    testImplementation libs.mockito.core
    testImplementation libs.mockito.kotlin
    testImplementation libs.truth
    testImplementation libs.turbine

    androidTestImplementation libs.androidx.test.espresso.core
    androidTestImplementation libs.androidx.test.ext.junit
    androidTestImplementation libs.hilt.android.testing

    androidTestImplementation(composeBom)
    androidTestImplementation libs.androidx.compose.ui.test.junit4

    kaptAndroidTest libs.hilt.android.compiler

    debugImplementation libs.androidx.compose.ui.test.manifest
    debugImplementation libs.androidx.compose.ui.tooling

    coreLibraryDesugaring libs.android.tools.desugar.jdk
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.14.0"
    }

    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option 'lite'
                }
            }
        }
    }
}

tasks.withType(KotlinCompile).configureEach {
    kotlinOptions {
        languageVersion = '1.9'
    }
}